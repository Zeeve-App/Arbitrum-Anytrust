"use strict";
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ArbOwner
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
exports.tokenBridgeCreatorConfig = exports.tokenBridgeCreatorAddress = exports.tokenBridgeCreatorABI = exports.rollupCreatorConfig = exports.rollupCreatorAddress = exports.rollupCreatorABI = exports.erc20ABI = exports.arbOwnerPublicConfig = exports.arbOwnerPublicAddress = exports.arbOwnerPublicABI = exports.arbOwnerConfig = exports.arbOwnerAddress = exports.arbOwnerABI = void 0;
/**
 * [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x0000000000000000000000000000000000000070)
 */
exports.arbOwnerABI = [
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'method', internalType: 'bytes4', type: 'bytes4', indexed: true },
            {
                name: 'owner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },
        ],
        name: 'OwnerActs',
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'addChainOwner',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getAllChainOwners',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getInfraFeeAccount',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getNetworkFeeAccount',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
        name: 'isChainOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'maxWeiToRelease', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'releaseL1PricerSurplusFunds',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'ownerToRemove', internalType: 'address', type: 'address' },
        ],
        name: 'removeChainOwner',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newVersion', internalType: 'uint64', type: 'uint64' },
            { name: 'timestamp', internalType: 'uint64', type: 'uint64' },
        ],
        name: 'scheduleArbOSUpgrade',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'cap', internalType: 'uint64', type: 'uint64' }],
        name: 'setAmortizedCostCapBips',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newInfraFeeAccount', internalType: 'address', type: 'address' },
        ],
        name: 'setInfraFeeAccount',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'inertia', internalType: 'uint64', type: 'uint64' }],
        name: 'setL1BaseFeeEstimateInertia',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'pricePerUnit', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setL1PricePerUnit',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'equilibrationUnits', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setL1PricingEquilibrationUnits',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'inertia', internalType: 'uint64', type: 'uint64' }],
        name: 'setL1PricingInertia',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'weiPerUnit', internalType: 'uint64', type: 'uint64' }],
        name: 'setL1PricingRewardRate',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'recipient', internalType: 'address', type: 'address' }],
        name: 'setL1PricingRewardRecipient',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'priceInWei', internalType: 'uint256', type: 'uint256' }],
        name: 'setL2BaseFee',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'sec', internalType: 'uint64', type: 'uint64' }],
        name: 'setL2GasBacklogTolerance',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'sec', internalType: 'uint64', type: 'uint64' }],
        name: 'setL2GasPricingInertia',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'limit', internalType: 'uint64', type: 'uint64' }],
        name: 'setMaxTxGasLimit',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'priceInWei', internalType: 'uint256', type: 'uint256' }],
        name: 'setMinimumL2BaseFee',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {
                name: 'newNetworkFeeAccount',
                internalType: 'address',
                type: 'address',
            },
        ],
        name: 'setNetworkFeeAccount',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'cost', internalType: 'int64', type: 'int64' }],
        name: 'setPerBatchGasCharge',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'limit', internalType: 'uint64', type: 'uint64' }],
        name: 'setSpeedLimit',
        outputs: [],
    },
];
/**
 * [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x0000000000000000000000000000000000000070)
 */
exports.arbOwnerAddress = {
    421614: '0x0000000000000000000000000000000000000070',
};
/**
 * [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x0000000000000000000000000000000000000070)
 */
exports.arbOwnerConfig = {
    address: exports.arbOwnerAddress,
    abi: exports.arbOwnerABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ArbOwnerPublic
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x000000000000000000000000000000000000006b)
 */
exports.arbOwnerPublicABI = [
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getAllChainOwners',
        outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getInfraFeeAccount',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getNetworkFeeAccount',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
        name: 'isChainOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
];
/**
 * [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x000000000000000000000000000000000000006b)
 */
exports.arbOwnerPublicAddress = {
    421614: '0x000000000000000000000000000000000000006b',
};
/**
 * [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x000000000000000000000000000000000000006b)
 */
exports.arbOwnerPublicConfig = {
    address: exports.arbOwnerPublicAddress,
    abi: exports.arbOwnerPublicABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
exports.erc20ABI = [
    {
        type: 'event',
        inputs: [
            { name: 'owner', type: 'address', indexed: true },
            { name: 'spender', type: 'address', indexed: true },
            { name: 'value', type: 'uint256', indexed: false },
        ],
        name: 'Approval',
    },
    {
        type: 'event',
        inputs: [
            { name: 'from', type: 'address', indexed: true },
            { name: 'to', type: 'address', indexed: true },
            { name: 'value', type: 'uint256', indexed: false },
        ],
        name: 'Transfer',
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'owner', type: 'address' },
            { name: 'spender', type: 'address' },
        ],
        name: 'allowance',
        outputs: [{ type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', type: 'address' },
            { name: 'amount', type: 'uint256' },
        ],
        name: 'approve',
        outputs: [{ type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'account', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'decimals',
        outputs: [{ type: 'uint8' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'name',
        outputs: [{ type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'symbol',
        outputs: [{ type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalSupply',
        outputs: [{ type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'recipient', type: 'address' },
            { name: 'amount', type: 'uint256' },
        ],
        name: 'transfer',
        outputs: [{ type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'sender', type: 'address' },
            { name: 'recipient', type: 'address' },
            { name: 'amount', type: 'uint256' },
        ],
        name: 'transferFrom',
        outputs: [{ type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', type: 'address' },
            { name: 'addedValue', type: 'uint256' },
        ],
        name: 'increaseAllowance',
        outputs: [{ type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', type: 'address' },
            { name: 'subtractedValue', type: 'uint256' },
        ],
        name: 'decreaseAllowance',
        outputs: [{ type: 'bool' }],
    },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RollupCreator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * -
 * - [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x06E341073b2749e0Bb9912461351f716DeCDa9b0)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xfbd0b034e6305788007f6e0123cc5eae701a5751)
 */
exports.rollupCreatorABI = [
    { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'previousOwner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'newOwner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'rollupAddress',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'nativeToken',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'inboxAddress',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'outbox',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'rollupEventInbox',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'challengeManager',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'adminProxy',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'sequencerInbox',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'bridge',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'upgradeExecutor',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'validatorUtils',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'validatorWalletCreator',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
        ],
        name: 'RollupCreated',
    },
    { type: 'event', anonymous: false, inputs: [], name: 'TemplatesUpdated' },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'bridgeCreator',
        outputs: [
            { name: '', internalType: 'contract BridgeCreator', type: 'address' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'challengeManagerTemplate',
        outputs: [
            { name: '', internalType: 'contract IChallengeManager', type: 'address' },
        ],
    },
    {
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            {
                name: 'deployParams',
                internalType: 'struct RollupCreator.RollupDeploymentParams',
                type: 'tuple',
                components: [
                    {
                        name: 'config',
                        internalType: 'struct Config',
                        type: 'tuple',
                        components: [
                            {
                                name: 'confirmPeriodBlocks',
                                internalType: 'uint64',
                                type: 'uint64',
                            },
                            {
                                name: 'extraChallengeTimeBlocks',
                                internalType: 'uint64',
                                type: 'uint64',
                            },
                            { name: 'stakeToken', internalType: 'address', type: 'address' },
                            { name: 'baseStake', internalType: 'uint256', type: 'uint256' },
                            {
                                name: 'wasmModuleRoot',
                                internalType: 'bytes32',
                                type: 'bytes32',
                            },
                            { name: 'owner', internalType: 'address', type: 'address' },
                            {
                                name: 'loserStakeEscrow',
                                internalType: 'address',
                                type: 'address',
                            },
                            { name: 'chainId', internalType: 'uint256', type: 'uint256' },
                            { name: 'chainConfig', internalType: 'string', type: 'string' },
                            {
                                name: 'genesisBlockNum',
                                internalType: 'uint64',
                                type: 'uint64',
                            },
                            {
                                name: 'sequencerInboxMaxTimeVariation',
                                internalType: 'struct ISequencerInbox.MaxTimeVariation',
                                type: 'tuple',
                                components: [
                                    {
                                        name: 'delayBlocks',
                                        internalType: 'uint256',
                                        type: 'uint256',
                                    },
                                    {
                                        name: 'futureBlocks',
                                        internalType: 'uint256',
                                        type: 'uint256',
                                    },
                                    {
                                        name: 'delaySeconds',
                                        internalType: 'uint256',
                                        type: 'uint256',
                                    },
                                    {
                                        name: 'futureSeconds',
                                        internalType: 'uint256',
                                        type: 'uint256',
                                    },
                                ],
                            },
                        ],
                    },
                    { name: 'batchPoster', internalType: 'address', type: 'address' },
                    { name: 'validators', internalType: 'address[]', type: 'address[]' },
                    { name: 'maxDataSize', internalType: 'uint256', type: 'uint256' },
                    { name: 'nativeToken', internalType: 'address', type: 'address' },
                    { name: 'deployFactoriesToL2', internalType: 'bool', type: 'bool' },
                    {
                        name: 'maxFeePerGasForRetryables',
                        internalType: 'uint256',
                        type: 'uint256',
                    },
                ],
            },
        ],
        name: 'createRollup',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'l2FactoriesDeployer',
        outputs: [
            { name: '', internalType: 'contract DeployHelper', type: 'address' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'osp',
        outputs: [
            {
                name: '',
                internalType: 'contract IOneStepProofEntry',
                type: 'address',
            },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'rollupAdminLogic',
        outputs: [
            { name: '', internalType: 'contract IRollupAdmin', type: 'address' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'rollupUserLogic',
        outputs: [
            { name: '', internalType: 'contract IRollupUser', type: 'address' },
        ],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {
                name: '_bridgeCreator',
                internalType: 'contract BridgeCreator',
                type: 'address',
            },
            {
                name: '_osp',
                internalType: 'contract IOneStepProofEntry',
                type: 'address',
            },
            {
                name: '_challengeManagerLogic',
                internalType: 'contract IChallengeManager',
                type: 'address',
            },
            {
                name: '_rollupAdminLogic',
                internalType: 'contract IRollupAdmin',
                type: 'address',
            },
            {
                name: '_rollupUserLogic',
                internalType: 'contract IRollupUser',
                type: 'address',
            },
            {
                name: '_upgradeExecutorLogic',
                internalType: 'contract IUpgradeExecutor',
                type: 'address',
            },
            { name: '_validatorUtils', internalType: 'address', type: 'address' },
            {
                name: '_validatorWalletCreator',
                internalType: 'address',
                type: 'address',
            },
            {
                name: '_l2FactoriesDeployer',
                internalType: 'contract DeployHelper',
                type: 'address',
            },
        ],
        name: 'setTemplates',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'upgradeExecutorLogic',
        outputs: [
            { name: '', internalType: 'contract IUpgradeExecutor', type: 'address' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'validatorUtils',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'validatorWalletCreator',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    { stateMutability: 'payable', type: 'receive' },
];
/**
 * -
 * - [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x06E341073b2749e0Bb9912461351f716DeCDa9b0)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xfbd0b034e6305788007f6e0123cc5eae701a5751)
 */
exports.rollupCreatorAddress = {
    1337: '0x596eAbE0291D4cdAfAC7ef53D16C92Bf6922b5e0',
    412346: '0x3BaF9f08bAD68869eEdEa90F2Cc546Bd80F1A651',
    421614: '0x06E341073b2749e0Bb9912461351f716DeCDa9b0',
    11155111: '0xfBD0B034e6305788007f6e0123cc5EaE701a5751',
};
/**
 * -
 * - [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0x06E341073b2749e0Bb9912461351f716DeCDa9b0)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xfbd0b034e6305788007f6e0123cc5eae701a5751)
 */
exports.rollupCreatorConfig = {
    address: exports.rollupCreatorAddress,
    abi: exports.rollupCreatorABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TokenBridgeCreator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * -
 * - [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0xb462C69f8f638d2954c9618B03765FC1770190cF)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x7612718D3143C791B2Ff5c01a9a7D02CEf00AE9c)
 */
exports.tokenBridgeCreatorABI = [
    {
        stateMutability: 'payable',
        type: 'constructor',
        inputs: [
            { name: '_logic', internalType: 'address', type: 'address' },
            { name: 'admin_', internalType: 'address', type: 'address' },
            { name: '_data', internalType: 'bytes', type: 'bytes' },
        ],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'previousAdmin',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: 'newAdmin',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
        ],
        name: 'AdminChanged',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'beacon',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
        ],
        name: 'BeaconUpgraded',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'implementation',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
        ],
        name: 'Upgraded',
    },
    { stateMutability: 'payable', type: 'fallback' },
    { stateMutability: 'payable', type: 'receive' },
];
/**
 * -
 * - [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0xb462C69f8f638d2954c9618B03765FC1770190cF)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x7612718D3143C791B2Ff5c01a9a7D02CEf00AE9c)
 */
exports.tokenBridgeCreatorAddress = {
    1337: '0x4A2bA922052bA54e29c5417bC979Daaf7D5Fe4f4',
    412346: '0x38F35Af53bF913c439eaB06A367e09D6eb253492',
    421614: '0xb462C69f8f638d2954c9618B03765FC1770190cF',
    11155111: '0x7612718D3143C791B2Ff5c01a9a7D02CEf00AE9c',
};
/**
 * -
 * - [__View Contract on Arbitrum Sepolia Blockscout__](https://sepolia-explorer.arbitrum.io/address/0xb462C69f8f638d2954c9618B03765FC1770190cF)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x7612718D3143C791B2Ff5c01a9a7D02CEf00AE9c)
 */
exports.tokenBridgeCreatorConfig = {
    address: exports.tokenBridgeCreatorAddress,
    abi: exports.tokenBridgeCreatorABI,
};
