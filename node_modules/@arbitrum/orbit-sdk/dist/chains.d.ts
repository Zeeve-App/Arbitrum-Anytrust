import { sepolia, arbitrumSepolia } from 'viem/chains';
declare const nitroTestnodeL1: import("viem/_types/types/utils").Assign<{
    readonly id: 1337;
    readonly network: "Nitro Testnode L1";
    readonly name: "nitro-testnode-l1";
    readonly nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
        };
        readonly public: {
            readonly http: readonly ["http://127.0.0.1:8545"];
        };
    };
    readonly testnet: true;
}, import("viem/_types/types/chain").ChainConfig<undefined>>;
declare const nitroTestnodeL2: import("viem/_types/types/utils").Assign<{
    readonly id: 412346;
    readonly network: "Nitro Testnode L2";
    readonly name: "nitro-testnode-l2";
    readonly nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8547"];
        };
        readonly public: {
            readonly http: readonly ["http://127.0.0.1:8547"];
        };
    };
    readonly testnet: true;
}, import("viem/_types/types/chain").ChainConfig<undefined>>;
export declare const chains: readonly [import("viem/_types/types/utils").Assign<{
    readonly id: 11155111;
    readonly network: "sepolia";
    readonly name: "Sepolia";
    readonly nativeCurrency: {
        readonly name: "Sepolia Ether";
        readonly symbol: "SEP";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly alchemy: {
            readonly http: readonly ["https://eth-sepolia.g.alchemy.com/v2"];
            readonly webSocket: readonly ["wss://eth-sepolia.g.alchemy.com/v2"];
        };
        readonly infura: {
            readonly http: readonly ["https://sepolia.infura.io/v3"];
            readonly webSocket: readonly ["wss://sepolia.infura.io/ws/v3"];
        };
        readonly default: {
            readonly http: readonly ["https://rpc.sepolia.org"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc.sepolia.org"];
        };
    };
    readonly blockExplorers: {
        readonly etherscan: {
            readonly name: "Etherscan";
            readonly url: "https://sepolia.etherscan.io";
        };
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://sepolia.etherscan.io";
        };
    };
    readonly contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 751532;
        };
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
        };
        readonly ensUniversalResolver: {
            readonly address: "0x21B000Fd62a880b2125A61e36a284BB757b76025";
            readonly blockCreated: 3914906;
        };
    };
    readonly testnet: true;
}, import("viem/_types/types/chain").ChainConfig<undefined>>, import("viem/_types/types/utils").Assign<{
    readonly id: 421614;
    readonly name: "Arbitrum Sepolia";
    readonly network: "arbitrum-sepolia";
    readonly nativeCurrency: {
        readonly name: "Arbitrum Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
        };
        readonly public: {
            readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
        };
    };
    readonly blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://sepolia-explorer.arbitrum.io";
        };
    };
    readonly contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 81930;
        };
    };
    readonly testnet: true;
}, import("viem/_types/types/chain").ChainConfig<undefined>>, import("viem/_types/types/utils").Assign<{
    readonly id: 1337;
    readonly network: "Nitro Testnode L1";
    readonly name: "nitro-testnode-l1";
    readonly nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
        };
        readonly public: {
            readonly http: readonly ["http://127.0.0.1:8545"];
        };
    };
    readonly testnet: true;
}, import("viem/_types/types/chain").ChainConfig<undefined>>, import("viem/_types/types/utils").Assign<{
    readonly id: 412346;
    readonly network: "Nitro Testnode L2";
    readonly name: "nitro-testnode-l2";
    readonly nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8547"];
        };
        readonly public: {
            readonly http: readonly ["http://127.0.0.1:8547"];
        };
    };
    readonly testnet: true;
}, import("viem/_types/types/chain").ChainConfig<undefined>>];
export { sepolia, arbitrumSepolia, nitroTestnodeL1, nitroTestnodeL2 };
