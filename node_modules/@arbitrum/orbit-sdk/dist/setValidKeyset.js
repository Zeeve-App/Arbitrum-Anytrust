"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setValidKeyset = void 0;
const contracts_1 = require("./contracts");
const ParentChain_1 = require("./types/ParentChain");
const setValidKeysetEncodeFunctionData_1 = require("./setValidKeysetEncodeFunctionData");
async function setValidKeyset({ coreContracts, keyset, publicClient, walletClient, }) {
    const chainId = publicClient.chain?.id;
    const account = walletClient.account?.address;
    if (!(0, ParentChain_1.validParentChainId)(chainId)) {
        throw new Error('chainId is undefined');
    }
    if (typeof account === 'undefined') {
        throw new Error('account is undefined');
    }
    const { request } = await publicClient.simulateContract({
        address: coreContracts.upgradeExecutor,
        abi: contracts_1.upgradeExecutor.abi,
        functionName: 'executeCall',
        args: [
            coreContracts.sequencerInbox,
            (0, setValidKeysetEncodeFunctionData_1.setValidKeysetEncodeFunctionData)(keyset), // targetCallData
        ],
        account,
    });
    const hash = await walletClient.writeContract(request);
    const txReceipt = await publicClient.waitForTransactionReceipt({ hash });
    return txReceipt;
}
exports.setValidKeyset = setValidKeyset;
